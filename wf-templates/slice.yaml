apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: workflow-slice
spec:
  templates:
  - name: create-tenant
    # Create new tenant in vertical slicer
    #
    # Parameters:
    # slicer_ip: ipaddress of the vertical slicer service (str)
    # group_name: group name the tenant will be created under (str)
    # tenant_name: the name of the vertical tenant to create (str)
    #
    inputs:
      parameters:
      - name: slicer_ip
      - name: group_name
      - name: tenant_name
    script:
      image: docker.pkg.github.com/5gzorro/issm/python:alpine3.6-kafka-v0.1
      command: [sh]
      source: |
        generate_post_tenant_create()
        {
          cat <<EOF
        {
          "username": "{{inputs.parameters.tenant_name}}",
          "password": "{{inputs.parameters.tenant_name}}"
        }
        EOF
        }
        curl -X POST -d username=admin -d password=admin -c /tmp/a_c http://{{inputs.parameters.slicer_ip}}:8082/login
        curl -b /tmp/a_c --write-out '%{http_code}' -X POST http://{{inputs.parameters.slicer_ip}}:8082/vs/admin/group/{{inputs.parameters.group_name}}/tenant --data "$(generate_post_tenant_create)" --header "Content-Type:application/json"

  - name: create-group
    # Create a new group in vertical slicer
    #
    # Parameters:
    # slicer_ip: ipaddress of the vertical slicer service (str)
    # group_name: group name (str)
    #
    inputs:
      parameters:
      - name: slicer_ip
      - name: group_name
    script:
      image: docker.pkg.github.com/5gzorro/issm/python:alpine3.6-kafka-v0.1
      command: [sh]
      source: |
        curl  -X POST -d username=admin -d password=admin -c /tmp/a_c http://{{inputs.parameters.slicer_ip}}:8082/login
        curl  -b /tmp/a_c --write-out '%{http_code}' -X POST http://{{inputs.parameters.slicer_ip}}:8082/vs/admin/group/{{inputs.parameters.group_name}} --header "Content-Type:application/json"

  - name: create-descriptor
    # Create a new VSD
    #
    inputs:
      parameters:
      - name: slicer_ip
      - name: tenant_name
      - name: blueprint_name
      - name: name
      - name: parameters
    script:
      image: docker.pkg.github.com/5gzorro/issm/python:alpine3.6-kafka-v0.1
      command: [sh]
      source: |
        generate_post_descriptor_create()
        {
          cat <<EOF
        {
          vsd: {
            "name": "{{inputs.parameters.name}}",
            "version": "0.1",
            "sst": "EMBB",
            "managementType": "PROVIDER_MANAGED",
            "vsBlueprintId": "$1",
            "qosParameters": "{{inputs.parameters.parameters}}"
          },
          "tenantId": "{{inputs.parameters.tenant_name}}",
          "isPublic": true
        }
        EOF
        }

        curl -X POST -d username=admin -d password=admin -c /tmp/a_c http://{{inputs.parameters.slicer_ip}}:8082/login
        bp_list="$(curl -b /tmp/a_c http://{{inputs.parameters.slicer_ip}}:8082/vs/catalogue/vsblueprint --header "Content-Type:application/json" 2>/dev/null)"
        bp_id="$(echo $bp_list | jq -r '.[] | select(.name=="{{inputs.parameters.blueprint_name}}") | .vsBlueprintId')"

        curl -X POST -d username={{inputs.parameters.tenant_name}} -d password={{inputs.parameters.tenant_name}} -c /tmp/t_c http://{{inputs.parameters.slicer_ip}}:8082/login
        curl -b /tmp/t_c --data "$(generate_post_descriptor_create $bp_id)" -X POST http://{{inputs.parameters.slicer_ip}}:8082/vs/catalogue/vsdescriptor --header "Content-Type:application/json"
