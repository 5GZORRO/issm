# Copyright 2021 - 2022 IBM Corporation

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

# http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: workflow-isbp
spec:
  templates:
  - name: handle-breach
    dag:
      tasks:
      # Retrieve transaction-uuid
      - name: breach-transaction-uuid
        templateRef:
          name: workflow-base
          template: jq-script
        arguments:
          parameters:
          - name: json_str
            value: "{{workflow.parameters.breachPredictionNotification}}"
          - name: jq_query
            value: '.transactionID'

      - name: breach-location
      # Retrieve location
        templateRef:
          name: workflow-base
          template: jq-script
        arguments:
          parameters:
          - name: json_str
            value: "{{workflow.parameters.breachPredictionNotification}}"
          - name: jq_query
            value: '.location'

      - name: breach-instance-id
      # Retrieve location
        templateRef:
          name: workflow-base
          template: jq-script
        arguments:
          parameters:
          - name: json_str
            value: "{{workflow.parameters.breachPredictionNotification}}"
          - name: jq_query
            value: '.instanceID'

      - name: breach-product-id
        # Retrieve location      
        templateRef:
          name: workflow-base
          template: jq-script
        arguments:
          parameters:
          - name: json_str
            value: "{{workflow.parameters.breachPredictionNotification}}"
          - name: jq_query
            value: '.productID'
      
      - name: get-transaction
        dependencies: [breach-transaction-uuid]
        template: issm-api-get-transaction
        arguments:
          parameters:
          - name: service_ip
            value: "{{workflow.parameters.service_ip}}"
          - name: service_port
            value: "{{workflow.parameters.service_port}}"
          - name: transaction_uuid
            value: "{{tasks.breach-transaction-uuid.outputs.result}}"

      - name: transaction-service-owner
        # Retrieve service_owner from transaction object
        dependencies: [get-transaction]
        templateRef:
          name: workflow-base
          template: jq-script
        arguments:
          parameters:
          - name: json_str
            value: "{{tasks.get-transaction.outputs.result}}"
          - name: jq_query
            value: '.workflow_parameters[] | select(.name=="service_owner").value'

  - name: issm-api-get-transaction
    inputs:
      parameters:
      - name: service_ip
      - name: service_port
      - name: transaction_uuid
    script:
      image: docker.pkg.github.com/5gzorro/issm/python:alpine3.6-kafka-v0.1
      imagePullPolicy: IfNotPresent
      command: [python]
      source: |
        import json
        import requests
        import sys

        headers = {'Content-Type': 'application/json'}

        r = requests.get("http://{{inputs.parameters.service_ip}}:{{inputs.parameters.service_port}}/workflows/{{inputs.parameters.transaction_uuid}}",
            headers=headers)
        json.dump(r.json(), sys.stdout)
