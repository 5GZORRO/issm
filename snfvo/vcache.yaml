# Copyright 2020 - 2022 IBM Corporation

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

# http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: snfvo-vcache
spec:
  templates:
  - name: instantiate
    steps:
    - - name: instantiate-vcache
        when: "{{workflow.parameters.sub_operation}} == \"INSTANTIATE_SERVICE\""
        template: instantiate-vcache

  - name: instantiate-vcache
    dag:
      tasks:
      - name: edge-order-id
        templateRef:
          name: workflow-base
          template: from-key
        arguments:
          parameters:
          - name: key
            value: edge_order_id_0
          - name: json_str
            value: |
              {{workflow.parameters.snfvo_data}}

      - name: get-edge-order-from-catalog
        # TODO: ensure to retrieve from Edge category..
        dependencies: [edge-order-id]
        templateRef:
          name: workflow-catalog
          template: get-order-from-catalog
        arguments:
          parameters:
          - name: order_id
            value: "{{tasks.edge-order-id.outputs.result}}"

      - name: userdata-vcache
        templateRef:
          name: workflow-base
          template: from-key
        arguments:
          parameters:
          - name: key
            value: userdata_vcache
          - name: json_str
            value: |
              {{workflow.parameters.snfvo_data}}

      - name: trigger-orchestration
        dependencies: [userdata-vcache, get-edge-order-from-catalog]
        templateRef:
          name: workflow-orchestrator
          template: trigger-orchestration
        arguments:
          parameters:
          - name: resource_owner
            # domain's orchestrator
            value: "{{tasks.get-edge-order-from-catalog.outputs.parameters.related_party}}"

          - name: vsbName
            value: "app"

          - name: userdata
            value: "{{tasks.userdata-vcache.outputs.result}}"

          - name: vsd_parameters
            value: |
              {}

      - name: wait-for-status
        dependencies: [trigger-orchestration]
        templateRef:
          name: workflow-base
          template: consume
        arguments:
          parameters:
          - name: kafka
            value: "{{workflow.parameters.kafka}}"
          - name: kafka_topic
            value: "issm-in-{{workflow.parameters.service_owner}}"
          - name: msg_id
            value: "{{tasks.trigger-orchestration.outputs.parameters.event_uuid}}"

      - name: get-vcache-instance-id
        dependencies: [wait-for-status]
        templateRef:
          name: workflow-base
          template: from-key
        arguments:
          parameters:
          - name: key
            value: vsi_id
          - name: json_str
            value: |
              {{tasks.wait-for-status.outputs.parameters.payload}}

      - name: update-order
        dependencies: [get-vcache-instance-id]
        templateRef:
          name: workflow-catalog
          template: update-order-instance-id
        # in any case, persist instanceId
        arguments:
          parameters:
          - name: transaction_uuid
            value: "{{workflow.parameters.transaction_uuid}}"
          - name: order_id
            value: "{{tasks.edge-order-id.outputs.result}}"
          - name: main
            value: "false"
          - name: instance_id
            value: "{{tasks.get-vcache-instance-id.outputs.result}}"
          - name: related_party
            value: "{{tasks.get-edge-order-from-catalog.outputs.parameters.related_party}}"

  - name: scaleout
    dag:
      tasks:
      - name: success
        templateRef:
          name: workflow-base
          template: success
