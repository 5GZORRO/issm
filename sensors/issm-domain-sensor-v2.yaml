# Copyright 2020 - 2021 IBM Corporation

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

# http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


#
# Sensor that invokes a workflow locally on the operator premises
# Every domain should have a sensor
#
apiVersion: argoproj.io/v1alpha1
kind: Sensor
metadata:
  name: issm-branch
spec:
  template:
    serviceAccountName: argo-events-sa
  dependencies:
    - name: test-dep
      # connects to platform bus
      eventSourceName: issm-kafka
      eventName: intent
  triggers:
    - template:
        name: kafka-workflow-trigger
        k8s:
          group: argoproj.io
          version: v1alpha1
          resource: workflows
          operation: create
          source:
            resource:
              apiVersion: argoproj.io/v1alpha1
              kind: Workflow
              metadata:
                #
                # Workflow name is the event_uuid defined in the payload
                # (see event parameters below)
                #
                name: "OVERRIDE"
                labels:
                  #
                  # transaction_uuid lable contains the transaction uuid of
                  # bussiness flow. NOTE: there could be several instances with
                  # a same transaction uuid
                  #
                  transaction_uuid: OVERRIDE
                  #
                  # to denote that this wf belongs to ISSM component to be used
                  # by ISSM-API queries
                  issm: "true"
              spec:
                entrypoint: handlerequest
                arguments:
                  parameters:
                  # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                  # Platform kafka bus
                  # (the only hard coded attribute)
                  # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                  - name: kafka
                    value: 172.28.3.196:9092

                  - name: kafka_dl
                    value: OVERRIDE

                  # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                  # Mandatory to exist
                  # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                  - name: transaction_uuid

                  - name: service_owner

                  # 'instantiate', 'scaleout'
                  - name: operation
                    value: OVERRIDE

                  - name: sub_operation
                    value: OVERRIDE

                  - name: vsbName
                    value: OVERRIDE

                  # Id of existing instance (for scaleout)
                  - name: instance_id
                    value: OVERRIDE

                  - name: resources
                    value: OVERRIDE

                  - name: resource_owner
                    # operator owner as denoted in the offer
                    value: OVERRIDE

                  - name: elma_url
                    value: OVERRIDE

                  - name: catalogue_url
                    value: OVERRIDE

                  - name: trmf_url
                    value: OVERRIDE

                  - name: srsd_url
                    value: OVERRIDE

                  - name: place
                    value: OVERRIDE

                  - name: sla_breach

                  - name: product_DID
                    value: OVERRIDE

                  - name: sla_DID
                    value: OVERRIDE

                  - name: order_id
                    value: OVERRIDE

                  - name: userdata
                    value: OVERRIDE

                  - name: category
                    value: OVERRIDE

                  - name: snfvo_data
                    value: OVERRIDE

                  - name: related_party
                    value: OVERRIDE

                  - name: vsd_parameters
                    value: OVERRIDE
                  
                templates:
                - name: handlerequest
                  steps:
                  - - name: instantiate
                      when: "{{workflow.parameters.operation}} == \"instantiate\""
                      template: instantiate

                  - - name: scaleout
                      when: "{{workflow.parameters.operation}} == \"scaleout\""
                      template: scaleout


                - name: instantiate
                  steps:
                  - - name: instantiate-from-api
                      when: "{{workflow.parameters.sub_operation}} == \"API\""
                      template: instantiate-from-api

                  - - name: instantiate-invoke-snfvo
                      when: "{{workflow.parameters.sub_operation}} == \"INSTANTIATE_SERVICE\""
                      template: instantiate-invoke-snfvo

                  - - name: instantiate-orchestrate
                      when: "{{workflow.parameters.sub_operation}} == \"ORCHESTRATE\""
                      template: orchestrate

                - name: instantiate-from-api
                  #
                  # Load domain's env first, then call into
                  # INSTANTIATE_SERVICE
                  #
                  steps:
                  - - name: get-domain-env
                      templateRef:
                        name: workflow-environment
                        template: get-domain-env
                      arguments:
                        parameters:
                        - name: domain
                          value: "{{workflow.parameters.service_owner}}"

                  - - name: get-platform-env
                      templateRef:
                        name: workflow-environment
                        template: get-platform-env

                  - - name: do-instantiate
                      templateRef:
                        name: instantiate-scaleout
                        template: instantiate
                      arguments:
                        parameters:
                        - name: catalogue_url
                          value: "{{steps.get-domain-env.outputs.parameters.catalogue_url}}"
                        - name: elma_url
                          value: "{{steps.get-domain-env.outputs.parameters.elma_url}}"
                        - name: trmf_url
                          value: "{{steps.get-domain-env.outputs.parameters.trmf_url}}"
                        - name: srsd_url
                          value: "{{steps.get-platform-env.outputs.parameters.srsd_url}}"

                        - name: kafka_dl
                          value: "{{steps.get-platform-env.outputs.parameters.kafka_dl}}"


                - name: scaleout
                  #
                  # Load domain's env first, then call into
                  # SCALEOUT_SERVICE
                  #
                  steps:
                  - - name: scaleout-from-api
                      when: "{{workflow.parameters.sub_operation}} == \"API\""
                      template: scaleout-from-api

                  - - name: scaleout-invoke-snfvo
                      when: "{{workflow.parameters.sub_operation}} == \"SCALEOUT_SERVICE\""
                      template: scaleout-invoke-snfvo

                  - - name: scaleout-invoke-snfvo-2
                      when: "{{workflow.parameters.sub_operation}} == \"BEST_OFFER_SELECTION\""
                      template: scaleout-invoke-snfvo

                  - - name: scaleout-orchestrate
                      when: "{{workflow.parameters.sub_operation}} == \"ORCHESTRATE\""
                      template: orchestrate

                - name: scaleout-from-api
                  steps:
                  - - name: get-domain-env
                      templateRef:
                        name: workflow-environment
                        template: get-domain-env
                      arguments:
                        parameters:
                        - name: domain
                          value: "{{workflow.parameters.service_owner}}"

                  - - name: get-platform-env
                      templateRef:
                        name: workflow-environment
                        template: get-platform-env
                      
                  - - name: do-scaleout
                      templateRef:
                        name: instantiate-scaleout
                        template: scaleout
                      arguments:
                        parameters:
                        - name: catalogue_url
                          value: "{{steps.get-domain-env.outputs.parameters.catalogue_url}}"
                        - name: elma_url
                          value: "{{steps.get-domain-env.outputs.parameters.elma_url}}"
                        - name: trmf_url
                          value: "{{steps.get-domain-env.outputs.parameters.trmf_url}}"
                        - name: srsd_url
                          value: "{{steps.get-platform-env.outputs.parameters.srsd_url}}"

                        - name: kafka_dl
                          value: "{{steps.get-platform-env.outputs.parameters.kafka_dl}}"



                - name: orchestrate
                  templateRef:
                    name: orchestrate
                    template: orchestrate


                  

                - name: instantiate-invoke-snfvo
                  # 
                  # Invoke proper s-nfvo (Instantiate)
                  #
                  steps:
                  - - name: get-order-from-catalog
                      templateRef:
                        name: workflow-catalog
                        template: get-order-from-catalog
                      arguments:
                        parameters:
                        - name: order_id
                          value: "{{workflow.parameters.order_id}}"

                  - - name: snfvo-vcdn
                      when: "\"{{steps.get-order-from-catalog.outputs.parameters.name}}\" == \"CDN Network Service (CDN+SAS)\""
                      templateRef:
                        name: snfvo-vcdn-flow
                        template: instantiate

                  - - name: snfvo-spectrum
                      when: "\"{{steps.get-order-from-catalog.outputs.parameters.name}}\" == \"Slice Offer UC2\""
                      templateRef:
                        name: snfvo-spectrum-flow
                        template: instantiate

                  - - name: snfvo-ota
                      when: "\"{{steps.get-order-from-catalog.outputs.parameters.name}}\" == \"OTA demo eucnc core\""
                      templateRef:
                        name: snfvo-ota-flow
                        template: instantiate

                - name: scaleout-invoke-snfvo
                  # 
                  # Invoke proper s-nfvo (Scaleout)
                  #
                  steps:
                  - - name: get-order-from-catalog
                      templateRef:
                        name: workflow-catalog
                        template: get-order-from-catalog
                      arguments:
                        parameters:
                        - name: order_id
                          value: "{{workflow.parameters.order_id}}"

                  - - name: snfvo-vcdn
                      when: "\"{{steps.get-order-from-catalog.outputs.parameters.name}}\" == \"CDN Network Service (CDN+SAS)\""
                      templateRef:
                        name: snfvo-vcdn-flow
                        template: scaleout


          parameters:
            - src:
                #
                # event_uuid is treated as an instance uuid for this
                # flow instance
                dependencyName: test-dep
                dataKey: body.event_uuid
              dest: metadata.name

            - src:
                dependencyName: test-dep
                dataKey: body.kafka_dl
              dest: spec.arguments.parameters.1.value

            - src:
                #
                # transaction_uuid is treated as the whole business transaction
                # that can contain several flows (i.e. several event_uuids)
                #
                dependencyName: test-dep
                dataKey: body.transaction_uuid
              dest: metadata.labels.transaction_uuid

            - src:
                dependencyName: test-dep
                dataKey: body.transaction_uuid
                value: notapplicable
              dest: spec.arguments.parameters.2.value

            - src:
                dependencyName: test-dep
                dataKey: body.service_owner
                value: DEFAULT
              dest: spec.arguments.parameters.3.value

            - src:
                dependencyName: test-dep
                dataKey: body.operation
              dest: spec.arguments.parameters.4.value

            - src:
                dependencyName: test-dep
                dataKey: body.operation
              dest: metadata.labels.operation

            - src:
                dependencyName: test-dep
                dataKey: body.sub_operation
                value: instantiate
              dest: spec.arguments.parameters.5.value

            - src:
                dependencyName: test-dep
                dataKey: body.vsbName
                value: DEFAULT
              dest: spec.arguments.parameters.6.value

            - src:
                dependencyName: test-dep
                dataKey: body.instance_id
                value: DEFAULT
              dest: spec.arguments.parameters.7.value

            - src:
                dependencyName: test-dep
                dataKey: body.resources
                value: DEFAULT
              dest: spec.arguments.parameters.8.value

            - src:
                dependencyName: test-dep
                dataKey: body.resource_owner
                value: DEFAULT
              dest: spec.arguments.parameters.9.value

            - src:
                dependencyName: test-dep
                dataKey: body.elma_url
                value: DEFAULT
              dest: spec.arguments.parameters.10.value

            - src:
                dependencyName: test-dep
                dataKey: body.catalogue_url
                value: DEFAULT
              dest: spec.arguments.parameters.11.value

            - src:
                dependencyName: test-dep
                dataKey: body.trmf_url
                value: DEFAULT
              dest: spec.arguments.parameters.12.value

            - src:
                dependencyName: test-dep
                dataKey: body.srsd_url
                value: DEFAULT
              dest: spec.arguments.parameters.13.value

            - src:
                dependencyName: test-dep
                dataKey: body.place
                value: |
                  {
                  }
                
              dest: spec.arguments.parameters.14.value

            - src:
                dependencyName: test-dep
                dataKey: body.sla_breach
                value: |
                  {
                    "applicable": "false"
                  }
              dest: spec.arguments.parameters.15.value

            - src:
                dependencyName: test-dep
                dataKey: body.product_DID
                value: DEFAULT
              dest: spec.arguments.parameters.16.value

            - src:
                dependencyName: test-dep
                dataKey: body.sla_DID
                value: DEFAULT
              dest: spec.arguments.parameters.17.value

            - src:
                dependencyName: test-dep
                dataKey: body.order_id
                value: DEFAULT
              dest: spec.arguments.parameters.18.value

            - src:
                dependencyName: test-dep
                dataKey: body.userdata
                value: |
                  {
                  }
              dest: spec.arguments.parameters.19.value

            - src:
                dependencyName: test-dep
                dataKey: body.category
                value: DEFAULT
              dest: spec.arguments.parameters.20.value

            - src:
                dependencyName: test-dep
                dataKey: body.snfvo_data
                value: |
                  {
                  }
              dest: spec.arguments.parameters.21.value

            - src:
                dependencyName: test-dep
                dataKey: body.related_party
                value: DEFAULT
              dest: spec.arguments.parameters.22.value

            - src:
                dependencyName: test-dep
                dataKey: body.vsd_parameters
                value: |
                  {
                  }
              dest: spec.arguments.parameters.23.value
